# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, CODRA - Pierre Raybaut
# This file is distributed under the same license as the CodraFT package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: CodraFT \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-26 09:42+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../features/image/menu/processing.rst:2
msgid "\"Processing\" menu"
msgstr "Menu \"Traitement\""

#: ../../features/image/menu/processing.rst:15
#: ../../features/image/menu/processing.rst:17
msgid "Linear calibration"
msgstr "Étalonnage linéaire"

#: ../../features/image/menu/processing.rst:7
msgid ""
"Create a new image which is a linear calibration of each selected image "
"with respect to Z axis:"
msgstr ""
"Crée une image à partir de l'étalonnage linéaire (par rapport à l'axe des"
" Z) de chaque image sélectionnée."

#: ../../features/image/menu/processing.rst:14
msgid "Parameter"
msgstr "Paramètre"

#: ../../features/image/menu/processing.rst:16
msgid "Z-axis"
msgstr "Axe des Z"

#: ../../features/image/menu/processing.rst:17
msgid ":math:`z_{1} = a.z_{0} + b`"
msgstr ""

#: ../../features/image/menu/processing.rst:20
msgid "Thresholding"
msgstr "Seuillage"

#: ../../features/image/menu/processing.rst:20
msgid "Apply the thresholding to each selected image."
msgstr "Applique un seuillage sur chaque image sélectionnée."

#: ../../features/image/menu/processing.rst:23
msgid "Clipping"
msgstr "Ecrêtage"

#: ../../features/image/menu/processing.rst:23
msgid "Apply the clipping to each selected image."
msgstr "Applique un écrêtage sur chaque image sélectionnée."

#: ../../features/image/menu/processing.rst:27
msgid "Moving average"
msgstr "Moyenne mobile"

#: ../../features/image/menu/processing.rst:26
msgid ""
"Compute moving average of each selected image (implementation based on "
"`scipy.ndimage.uniform_filter "
"<https://docs.scipy.org/doc/scipy/reference/generated/scipy.ndimage.uniform_filter.html>`_)."
msgstr ""
"Calcule le résultat de la moyenne mobile de chaque image sélectionnée "
"(implémentation basée sur `scipy.ndimage.uniform_filter "
"<https://docs.scipy.org/doc/scipy/reference/generated/scipy.ndimage.uniform_filter.html>`_)."

#: ../../features/image/menu/processing.rst:31
msgid "Moving median"
msgstr "Médiane mobile"

#: ../../features/image/menu/processing.rst:30
msgid ""
"Compute moving median of each selected image (implementation based on "
"`scipy.signal.medfilt "
"<https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.medfilt.html>`_)."
msgstr ""
"Calcule le résultat de la médiane mobile de chaque image sélectionnée "
"(implémentation basée sur `scipy.signal.medfilt "
"<https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.medfilt.html>`_)."

#: ../../features/image/menu/processing.rst:35
msgid "Wiener filter"
msgstr "Filtre de Wiener"

#: ../../features/image/menu/processing.rst:34
msgid ""
"Compute Wiener filter of each selected image (implementation based on "
"`scipy.signal.wiener "
"<https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.wiener.html>`_)."
msgstr ""
"Calcule le résultat du filtre de Wiener sur chaque image sélectionnée "
"(implémentation basée sur `scipy.signal.wiener "
"<https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.wiener.html>`_)."

#: ../../features/image/menu/processing.rst:39
msgid "FFT"
msgstr "FFT"

#: ../../features/image/menu/processing.rst:38
msgid ""
"Create a new image which is the Fast Fourier Transform (FFT) of each "
"selected image."
msgstr ""
"Crée une image à partir de la transformée de Fourier rapide (FFT) de "
"chaque image sélectionnée."

#: ../../features/image/menu/processing.rst:42
msgid "Inverse FFT"
msgstr "FFT inverse"

#: ../../features/image/menu/processing.rst:42
msgid "Create a new image which is the inverse FFT of each selected image."
msgstr ""
"Crée une image à partir de la transformée de Fourier rapide inverse (FFT "
"inverse) de chaque image sélectionnée."

#: ../../features/image/menu/processing.rst:46
msgid "Total variation denoising"
msgstr "Filtrage variationnel (débruitage)"

#: ../../features/image/menu/processing.rst:45
msgid ""
"Denoise image using Total Variation algorithm (implementation based on "
"`skimage.restoration.denoise_tv_chambolle <https://scikit-"
"image.org/docs/stable/api/skimage.restoration.html#denoise-tv-"
"chambolle>`_)"
msgstr ""
"Calcule le résultat d'un débruitage par filtrage variationnel selon "
"l'algorithme de Chambolle (implémentation basée sur "
"`skimage.restoration.denoise_tv_chambolle <https://scikit-"
"image.org/docs/stable/api/skimage.restoration.html#denoise-tv-"
"chambolle>`_)"

#: ../../features/image/menu/processing.rst:50
msgid "Bilateral filter denoising"
msgstr "Filtrage bilatéral (débruitage)"

#: ../../features/image/menu/processing.rst:49
msgid ""
"Denoise image using bilateral filter (implementation based on "
"`skimage.restoration.denoise_bilateral <https://scikit-"
"image.org/docs/stable/api/skimage.restoration.html#denoise-bilateral>`_)"
msgstr ""
"Calcule le résultat d'un débruitage par filtrage bilatéral "
"(implémentation basée sur `skimage.restoration.denoise_bilateral <https"
"://scikit-image.org/docs/stable/api/skimage.restoration.html#denoise-"
"bilateral>`_)"

#: ../../features/image/menu/processing.rst:54
msgid "Wavelet denoising"
msgstr "Débruitage par ondelettes"

#: ../../features/image/menu/processing.rst:53
msgid ""
"Perform wavelet denoising on image (implementation based on "
"`skimage.restoration.denoise_wavelet <https://scikit-"
"image.org/docs/stable/api/skimage.restoration.html#denoise-wavelet>`_)"
msgstr ""
"Calcule le résultat d'un débruitage par ondelettes (implémentation basée "
"sur `skimage.restoration.denoise_wavelet <https://scikit-"
"image.org/docs/stable/api/skimage.restoration.html#denoise-wavelet>`_)"

#: ../../features/image/menu/processing.rst:58
msgid "White Top-Hat denoising"
msgstr "Débruitage par Top-Hat"

#: ../../features/image/menu/processing.rst:57
msgid ""
"Denoise image by subtracting its white top hat transform (using a disk "
"footprint)"
msgstr ""
"Débruitage de l'image par soustraction de la transformée Top-Hat avec "
"ouverture circulaire de rayon paramétrabl"

#: ../../features/image/menu/processing.rst:62
msgid "White Top-Hat (disk)"
msgstr "Top-Hat (disque)"

#: ../../features/image/menu/processing.rst:61
msgid ""
"Perform white top hat transform of an image, using a disk footprint "
"(implementation based on `skimage.morphology.white_tophat <https"
"://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.white_tophat>`_)"
msgstr ""
"Calcule le résultat d'un Top-Hat de l'image, avec une ouverture "
"circulaire (disque) de rayon paramétrable (implémentation basée sur "
"`skimage.restoration.denoise_wavelet <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.white_tophat>`_)"

#: ../../features/image/menu/processing.rst:66
msgid "Black Top-Hat (disk)"
msgstr "Top-Hat dual (disque)"

#: ../../features/image/menu/processing.rst:65
msgid ""
"Perform black top hat transform of an image, using a disk footprint "
"(implementation based on `skimage.morphology.black_tophat <https"
"://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.black_tophat>`_)"
msgstr ""
"Calcule le résultat d'un Top-Hat dual de l'image, avec une ouverture "
"circulaire (disque) de rayon paramétrable (implémentation basée sur "
"`skimage.restoration.denoise_wavelet <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.black_tophat>`_)"

#: ../../features/image/menu/processing.rst:70
msgid "Erosion (disk)"
msgstr "Erosion (disque)"

#: ../../features/image/menu/processing.rst:69
msgid ""
"Perform morphological erosion on an image, using a disk footprint "
"(implementation based on `skimage.morphology.erosion <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.erosion>`_)"
msgstr ""
"Calcule le résultat d'une érosion de l'image, avec une ouverture "
"circulaire (disque) de rayon paramétrable (implémentation basée sur "
"`skimage.morphology.erosion <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.erosion>`_)"

#: ../../features/image/menu/processing.rst:74
msgid "Dilation (disk)"
msgstr "Dilatation (disque)"

#: ../../features/image/menu/processing.rst:73
msgid ""
"Perform morphological dilation on an image, using a disk footprint "
"(implementation based on `skimage.morphology.dilation <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.dilation>`_)"
msgstr ""
"Calcule le résultat d'une dilatation de l'image, avec une ouverture "
"circulaire (disque) de rayon paramétrable (implémentation basée sur "
"`skimage.morphology.dilation <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.dilation>`_)"

#: ../../features/image/menu/processing.rst:78
msgid "Opening (disk)"
msgstr "Ouverture (disque)"

#: ../../features/image/menu/processing.rst:77
msgid ""
"Perform morphological opening on an image, using a disk footprint "
"(implementation based on `skimage.morphology.opening <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.opening>`_)"
msgstr ""
"Calcule le résultat d'une ouverture morphologique de l'image, avec une "
"forme circulaire (disque) de rayon paramétrable (implémentation basée sur"
" `skimage.morphology.opening <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.opening>`_)"

#: ../../features/image/menu/processing.rst:82
msgid "Closing (disk)"
msgstr "Fermeture (disque)"

#: ../../features/image/menu/processing.rst:81
msgid ""
"Perform morphological closing on an image, using a disk footprint "
"(implementation based on `skimage.morphology.closing <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.closing>`_)"
msgstr ""
"Calcule le résultat d'une fermeture morphologique de l'image, avec une "
"forme circulaire (disque) de rayon paramétrable (implémentation basée sur"
" `skimage.morphology.closing <https://scikit-"
"image.org/docs/stable/api/skimage.morphology.html#skimage.morphology.closing>`_)"

#: ../../features/image/menu/processing.rst:85
msgid "Canny filter"
msgstr "Filtre de Canny"

#: ../../features/image/menu/processing.rst:85
msgid ""
"Perform edge filtering on an image, using the Canny algorithm "
"(implementation based on `skimage.feature.canny <https://scikit-"
"image.org/docs/stable/api/skimage.feature.html#skimage.feature.canny>`_)"
msgstr "Calcule le résultat d'une détection de contours à l'aide l'algorithme de Canny  (implémentation basée sur `skimage.feature.canny <https://scikit-image.org/docs/stable/api/skimage.feature.html#skimage.feature.canny>`_)"
