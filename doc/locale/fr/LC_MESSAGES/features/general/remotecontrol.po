# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Codra - Pierre Raybaut
# This file is distributed under the same license as the DataLab package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: DataLab \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-01 18:06+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../features/general/remotecontrol.rst:2
msgid "Remote controlling"
msgstr "Contrôle à distance"

#: ../../features/general/remotecontrol.rst:4
msgid ""
"DataLab may be controlled remotely using the `XML-RPC`_ protocol which is"
" natively supported by Python. Remote controlling allows to access "
"DataLab main features from a separate process."
msgstr ""
"DataLab peut être contrôlé à distance grâce au protocole `XML-RPC`_ qui "
"est nativement pris en charge par Python. Le pilotage à distance permet "
"d'accéder aux fonctionnalités principales de DataLab depuis un processus "
"séparé."

#: ../../features/general/remotecontrol.rst:9
msgid "From an IDE"
msgstr "Depuis un IDE"

#: ../../features/general/remotecontrol.rst:11
msgid ""
"It is possible to run a Python script from an IDE (e.g. `Spyder`_ or any "
"other IDE, or even a Jupyter Notebook) that connects to a running DataLab"
" instance, adds a signal and an image, and then runs calculations. This "
"is the case of the `RemoteClient` class that is provided in module "
"``cdl.remote``."
msgstr ""
"Il est possible d'exécuter un script Python depuis un IDE (par exemple "
"`Spyder`_ ou tout autre IDE, ou même un Jupyter Notebook) qui se connecte"
" à une instance de DataLab en cours d'exécution, ajoute un signal et une "
"image, puis exécute des calculs. C'est le cas de la classe `RemoteClient`"
" qui est fournie dans le module ``cdl.remote``."

#: ../../features/general/remotecontrol.rst:17
msgid "From a third-party application"
msgstr "Depuis une application tierce"

#: ../../features/general/remotecontrol.rst:19
msgid ""
"It is also possible to connect to a running DataLab instance from a "
"third-party application, adds a signal and an image, and then runs "
"calculations. This is the case of the `RemoteClient` class that is "
"provided in module ``cdl.remote``."
msgstr ""
"Il est également possible de se connecter à une instance de DataLab en "
"cours d'exécution depuis une application tierce, d'ajouter un signal et "
"une image, puis d'exécuter des calculs. C'est le cas de la classe "
"`RemoteClient` qui est fournie dans le module ``cdl.remote``."

#: ../../features/general/remotecontrol.rst:23
msgid ""
"Data (signals and images) may also be exchanged between DataLab and the "
"remote client application, in both directions."
msgstr ""
"Les données (signaux et images) peuvent également être échangées entre "
"DataLab et l'application cliente distante, dans les deux sens."

#: ../../features/general/remotecontrol.rst:26
msgid ""
"The remote client application may be written in any language that "
"supports XML-RPC. For example, it is possible to write a remote client "
"application in Python, Java, C++, C#, etc. The remote client application "
"may be a graphical application or a command line application."
msgstr ""
"Le client distant peut être écrit dans n'importe quel langage qui prend "
"en charge XML-RPC. Par exemple, il est possible d'écrire un client "
"distant en Python, Java, C++, C#, etc. Le client distant peut être une "
"application graphique ou une application en ligne de commande."

#: ../../features/general/remotecontrol.rst:31
msgid ""
"The remote client application may be run on the same computer as DataLab "
"or on a different computer. In the latter case, the remote client "
"application must know the IP address of the computer running DataLab."
msgstr ""
"Le client distant peut être exécuté sur le même ordinateur que DataLab ou"
" sur un ordinateur différent. Dans ce dernier cas, le client distant doit"
" connaître l'adresse IP de l'ordinateur exécutant DataLab."

#: ../../features/general/remotecontrol.rst:35
msgid ""
"The remote client application may be run before or after DataLab. In the "
"latter case, the remote client application must try to connect to DataLab"
" until it succeeds."
msgstr ""
"Le client distant peut être exécuté avant ou après DataLab. Dans ce "
"dernier cas, le client distant doit essayer de se connecter à DataLab "
"jusqu'à ce qu'il réussisse."

#: ../../features/general/remotecontrol.rst:40
msgid "Supported features"
msgstr "Fonctionnalités prises en charge"

#: ../../features/general/remotecontrol.rst:42
msgid "Supported features are the following:"
msgstr "Les fonctionnalités prises en charge sont les suivantes :"

#: ../../features/general/remotecontrol.rst:44
msgid "Switch to signal or image panel"
msgstr "Basculement vers le panneau signal ou image"

#: ../../features/general/remotecontrol.rst:45
msgid "Remove all signals and images"
msgstr "Suppression de tous les signaux et images"

#: ../../features/general/remotecontrol.rst:46
msgid "Save current session to a HDF5 file"
msgstr "Enregistrement de la session en cours dans un fichier HDF5"

#: ../../features/general/remotecontrol.rst:47
msgid "Open HDF5 files into current session"
msgstr "Ouverture de fichers HDF5 dans la session en cours"

#: ../../features/general/remotecontrol.rst:48
msgid "Browse HDF5 file"
msgstr "Exploration d'un fichier HDF5"

#: ../../features/general/remotecontrol.rst:49
msgid "Open a signal or an image from file"
msgstr "Ouverture d'un signal ou d'une image depuis un fichier"

#: ../../features/general/remotecontrol.rst:50
msgid "Add a signal"
msgstr "Ajout d'un signal"

#: ../../features/general/remotecontrol.rst:51
msgid "Add an image"
msgstr "Ajout d'une image"

#: ../../features/general/remotecontrol.rst:52
msgid "Get object list"
msgstr "Récupération de la liste des objets"

#: ../../features/general/remotecontrol.rst:53
msgid "Run calculation with parameters"
msgstr "Exécution d'un calcul avec des paramètres"

#: ../../features/general/remotecontrol.rst:57
msgid ""
"The signal and image objects are described on this section: :ref:`ref-to-"
"model`."
msgstr "Les objets signal et image sont décrits dans cette section : :ref:`ref-to-model`."

#: ../../features/general/remotecontrol.rst:59
msgid ""
"Some examples are provided to help implementing such a communication "
"between your application and DataLab:"
msgstr ""
"Des exemples d'utilisation du contrôle à distance sont fournis afin "
"d'aider à l'implémentation de la communication entre votre application et"
" DataLab :"

#: ../../features/general/remotecontrol.rst:62
msgid "See module: ``cdl.tests.remoteclient_app``"
msgstr "Voir le module ``cdl.tests.remoteclient_app``"

#: ../../features/general/remotecontrol.rst:63
msgid "See module: ``cdl.tests.remoteclient_unit``"
msgstr "Voir le module ``cdl.tests.remoteclient_unit``"

#: ../../features/general/remotecontrol.rst:67
msgid ""
"Screenshot of remote client application test "
"(``cdl.tests.remoteclient_app``)"
msgstr ""
"Copie d'écran du test applicatif du contrôle à distance "
"(``cdl.tests.remoteclient_app``)"

#: ../../features/general/remotecontrol.rst:70 cdl.remotecontrol.RemoteClient:5
#: of
msgid "Examples"
msgstr "Exemples"

#: ../../features/general/remotecontrol.rst:72
msgid ""
"When using Python 3, you may directly use the `RemoteClient` class as in "
"examples cited above."
msgstr ""
"Avec Python 3, il est possible d'utiliser directement la classe "
"`RemoteClient` comme dans les exemples précités."

#: ../../features/general/remotecontrol.rst:75
msgid ""
"Here is an example in Python 3 of a script that connects to a running "
"DataLab instance, adds a signal and an image, and then runs calculations "
"(the cell structure of the script make it convenient to be used in "
"`Spyder`_ IDE):"
msgstr ""
"Voici un exemple d'un script en Python 3 qui se connecte à une instance "
"de DataLab, ajoute un signal et une image, puis exécute des calculs (la "
"structure en cellules du script le rend pratique à utiliser dans l'IDE "
"`Spyder`_):"

#: ../../features/general/remotecontrol.rst:81
msgid "Here is a Python 2.7 reimplementation of this class:"
msgstr ""
"Voici de plus un exemple de réimplementation de cette classe en Python "
"2.7 :"

#: ../../features/general/remotecontrol.rst:86
msgid "Public API: remote client"
msgstr "API publique : client distant"

#: cdl.remotecontrol:2 of
msgid "DataLab remote controlling utilities"
msgstr ""

#: cdl.remotecontrol:4 of
msgid ""
"This module provides utilities to control DataLab from a Python script "
"(e.g. with Spyder) or from a Jupyter notebook."
msgstr ""

#: cdl.remotecontrol:7 of
msgid ""
"The :class:`RemoteClient` class provides the main interface to DataLab "
"XML-RPC server."
msgstr ""

#: cdl.remotecontrol.RemoteClient:1 of
msgid ""
"Object representing a proxy/client to DataLab XML-RPC server. This object"
" is used to call DataLab functions from a Python script."
msgstr ""

#: cdl.remotecontrol.RemoteClient:6 of
msgid ""
"Here is a simple example of how to use RemoteClient in a Python script or"
" in a Jupyter notebook:"
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_image:1
#: cdl.remotecontrol.RemoteServer.add_image:1 of
msgid "Add image data to DataLab."
msgstr ""

#: cdl.remotecontrol.BaseRPCServer.notify_port
#: cdl.remotecontrol.RemoteClient.add_image
#: cdl.remotecontrol.RemoteClient.add_object
#: cdl.remotecontrol.RemoteClient.add_signal
#: cdl.remotecontrol.RemoteClient.calc cdl.remotecontrol.RemoteClient.connect
#: cdl.remotecontrol.RemoteClient.get_object
#: cdl.remotecontrol.RemoteClient.get_object_from_title
#: cdl.remotecontrol.RemoteClient.get_object_from_uuid
#: cdl.remotecontrol.RemoteClient.get_object_titles
#: cdl.remotecontrol.RemoteClient.get_object_uuids
#: cdl.remotecontrol.RemoteClient.import_h5_file
#: cdl.remotecontrol.RemoteClient.open_h5_files
#: cdl.remotecontrol.RemoteClient.open_object
#: cdl.remotecontrol.RemoteClient.save_to_h5_file
#: cdl.remotecontrol.RemoteClient.switch_to_panel
#: cdl.remotecontrol.RemoteServer.add_image
#: cdl.remotecontrol.RemoteServer.add_signal
#: cdl.remotecontrol.RemoteServer.calc
#: cdl.remotecontrol.RemoteServer.get_object
#: cdl.remotecontrol.RemoteServer.get_object_from_title
#: cdl.remotecontrol.RemoteServer.get_object_from_uuid
#: cdl.remotecontrol.RemoteServer.get_object_titles
#: cdl.remotecontrol.RemoteServer.get_object_uuids
#: cdl.remotecontrol.RemoteServer.import_h5_file
#: cdl.remotecontrol.RemoteServer.notify_port
#: cdl.remotecontrol.RemoteServer.open_h5_files
#: cdl.remotecontrol.RemoteServer.open_object
#: cdl.remotecontrol.RemoteServer.save_to_h5_file
#: cdl.remotecontrol.RemoteServer.switch_to_panel
#: cdl.remotecontrol.array_to_rpcbinary cdl.remotecontrol.dataset_to_json
#: cdl.remotecontrol.json_to_dataset cdl.remotecontrol.rpcbinary_to_array of
msgid "Parameters"
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_image:3
#: cdl.remotecontrol.RemoteServer.add_image:3 of
msgid "Image title"
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_image:5 of
msgid "Image data"
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_image:7
#: cdl.remotecontrol.RemoteClient.add_signal:9
#: cdl.remotecontrol.RemoteServer.add_image:7
#: cdl.remotecontrol.RemoteServer.add_signal:9 of
msgid "X unit. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_image:9
#: cdl.remotecontrol.RemoteClient.add_signal:11
#: cdl.remotecontrol.RemoteServer.add_image:9
#: cdl.remotecontrol.RemoteServer.add_signal:11 of
msgid "Y unit. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_image:11
#: cdl.remotecontrol.RemoteServer.add_image:11 of
msgid "Z unit. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_image:13
#: cdl.remotecontrol.RemoteClient.add_signal:13
#: cdl.remotecontrol.RemoteServer.add_image:13
#: cdl.remotecontrol.RemoteServer.add_signal:13 of
msgid "X label. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_image:15
#: cdl.remotecontrol.RemoteClient.add_signal:15
#: cdl.remotecontrol.RemoteServer.add_image:15
#: cdl.remotecontrol.RemoteServer.add_signal:15 of
msgid "Y label. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_image:17
#: cdl.remotecontrol.RemoteServer.add_image:17 of
msgid "Z label. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_image
#: cdl.remotecontrol.RemoteClient.add_signal
#: cdl.remotecontrol.RemoteClient.calc
#: cdl.remotecontrol.RemoteClient.get_object
#: cdl.remotecontrol.RemoteClient.get_object_from_title
#: cdl.remotecontrol.RemoteClient.get_object_from_uuid
#: cdl.remotecontrol.RemoteClient.get_object_titles
#: cdl.remotecontrol.RemoteClient.get_object_uuids
#: cdl.remotecontrol.RemoteClient.get_version
#: cdl.remotecontrol.RemoteServer.add_image
#: cdl.remotecontrol.RemoteServer.add_signal
#: cdl.remotecontrol.RemoteServer.calc
#: cdl.remotecontrol.RemoteServer.get_object
#: cdl.remotecontrol.RemoteServer.get_object_from_title
#: cdl.remotecontrol.RemoteServer.get_object_from_uuid
#: cdl.remotecontrol.RemoteServer.get_object_titles
#: cdl.remotecontrol.RemoteServer.get_object_uuids
#: cdl.remotecontrol.array_to_rpcbinary cdl.remotecontrol.dataset_to_json
#: cdl.remotecontrol.json_to_dataset cdl.remotecontrol.rpcbinary_to_array of
msgid "Returns"
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_image:20 of
msgid "True if image was added successfully, False otherwise"
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_image
#: cdl.remotecontrol.RemoteClient.add_signal
#: cdl.remotecontrol.RemoteClient.calc
#: cdl.remotecontrol.RemoteClient.get_object
#: cdl.remotecontrol.RemoteClient.get_object_from_title
#: cdl.remotecontrol.RemoteClient.get_object_from_uuid
#: cdl.remotecontrol.RemoteClient.get_object_titles
#: cdl.remotecontrol.RemoteClient.get_object_uuids
#: cdl.remotecontrol.RemoteClient.get_version
#: cdl.remotecontrol.RemoteServer.add_image
#: cdl.remotecontrol.RemoteServer.add_signal
#: cdl.remotecontrol.RemoteServer.calc
#: cdl.remotecontrol.RemoteServer.get_object
#: cdl.remotecontrol.RemoteServer.get_object_from_title
#: cdl.remotecontrol.RemoteServer.get_object_from_uuid
#: cdl.remotecontrol.RemoteServer.get_object_titles
#: cdl.remotecontrol.RemoteServer.get_object_uuids of
msgid "Return type"
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_image
#: cdl.remotecontrol.RemoteClient.add_signal
#: cdl.remotecontrol.RemoteClient.connect
#: cdl.remotecontrol.RemoteClient.get_object
#: cdl.remotecontrol.RemoteClient.get_object_from_title
#: cdl.remotecontrol.RemoteClient.get_object_from_uuid
#: cdl.remotecontrol.RemoteClient.get_object_titles
#: cdl.remotecontrol.RemoteClient.get_object_uuids
#: cdl.remotecontrol.RemoteServer.get_object of
msgid "Raises"
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_image:23 of
msgid "Invalid data dtype"
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_object:1 of
msgid "Add object to DataLab."
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_object:3 of
#, fuzzy
msgid "Signal or image object"
msgstr "Basculement vers le panneau signal ou image"

#: cdl.remotecontrol.RemoteClient.add_signal:1
#: cdl.remotecontrol.RemoteServer.add_signal:1 of
msgid "Add signal data to DataLab."
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_signal:3
#: cdl.remotecontrol.RemoteServer.add_signal:3 of
msgid "Signal title"
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_signal:5
#: cdl.remotecontrol.RemoteServer.add_signal:5 of
msgid "X data"
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_signal:7
#: cdl.remotecontrol.RemoteServer.add_signal:7 of
msgid "Y data"
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_signal:18 of
msgid "True if signal was added successfully, False otherwise"
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_signal:21 of
msgid "Invalid xdata dtype"
msgstr ""

#: cdl.remotecontrol.RemoteClient.add_signal:22 of
msgid "Invalid ydata dtype"
msgstr ""

#: cdl.remotecontrol.RemoteClient.calc:1 cdl.remotecontrol.RemoteServer.calc:1
#: of
msgid "Call compute function ``name`` in current panel's processor."
msgstr ""

#: cdl.remotecontrol.RemoteClient.calc:3 cdl.remotecontrol.RemoteServer.calc:3
#: of
msgid "Compute function name"
msgstr ""

#: cdl.remotecontrol.RemoteClient.calc:5 of
msgid "Compute function parameter. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteClient.calc:8 of
msgid "Compute function result"
msgstr ""

#: cdl.remotecontrol.RemoteClient.close_application:1
#: cdl.remotecontrol.RemoteServer.close_application:1 of
#, fuzzy
msgid "Close DataLab application"
msgstr "Depuis une application tierce"

#: cdl.remotecontrol.RemoteClient.connect:1 of
msgid "Try to connect to DataLab XML-RPC server."
msgstr ""

#: cdl.remotecontrol.RemoteClient.connect:3 of
msgid ""
"XML-RPC port to connect to. If not specified, the port is automatically "
"retrieved from DataLab configuration."
msgstr ""

#: cdl.remotecontrol.RemoteClient.connect:6 of
msgid "Timeout in seconds. Defaults to 5.0."
msgstr ""

#: cdl.remotecontrol.RemoteClient.connect:8 of
msgid "Number of retries. Defaults to 10."
msgstr ""

#: cdl.remotecontrol.RemoteClient.connect:11 of
msgid "Unable to connect to DataLab"
msgstr ""

#: cdl.remotecontrol.RemoteClient.connect:12 of
msgid "Invalid timeout (must be >= 0.0)"
msgstr ""

#: cdl.remotecontrol.RemoteClient.connect:13 of
msgid "Invalid number of retries (must be >= 1)"
msgstr ""

#: cdl.remotecontrol.RemoteClient.get_object:1
#: cdl.remotecontrol.RemoteServer.get_object:1 of
#, fuzzy
msgid "Get object (signal/image) from index."
msgstr "Ouverture d'un signal ou d'une image depuis un fichier"

#: cdl.remotecontrol.RemoteClient.get_object:3
#: cdl.remotecontrol.RemoteServer.get_object:3 of
msgid "Object index in current panel. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteClient.get_object:5
#: cdl.remotecontrol.RemoteServer.get_object:5 of
msgid "Group index. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteClient.get_object:7
#: cdl.remotecontrol.RemoteServer.get_object:7
#: cdl.remotecontrol.RemoteServer.get_object_from_title:5
#: cdl.remotecontrol.RemoteServer.get_object_from_uuid:5
#: cdl.remotecontrol.RemoteServer.get_object_titles:3
#: cdl.remotecontrol.RemoteServer.get_object_uuids:3 of
msgid "Panel name. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteClient.get_object:10
#: cdl.remotecontrol.RemoteServer.get_object:10 of
msgid ""
"If ``index`` is not specified, returns the currently selected object. If "
"``group_index`` is not specified, return an object from the current "
"group. If ``panel`` is not specified, return an object from the current "
"panel."
msgstr ""

#: cdl.remotecontrol.RemoteClient.get_object:14
#: cdl.remotecontrol.RemoteClient.get_object_from_title:3
#: cdl.remotecontrol.RemoteClient.get_object_from_title:9
#: cdl.remotecontrol.RemoteClient.get_object_from_uuid:8 of
msgid "object"
msgstr ""

#: cdl.remotecontrol.RemoteClient.get_object:17
#: cdl.remotecontrol.RemoteClient.get_object_from_title:12
#: cdl.remotecontrol.RemoteClient.get_object_from_uuid:11
#: cdl.remotecontrol.RemoteServer.get_object:17 of
msgid "if object not found"
msgstr ""

#: cdl.remotecontrol.RemoteClient.get_object_from_title:1 of
#, fuzzy
msgid "Get object (signal/image) from title"
msgstr "Ouverture d'un signal ou d'une image depuis un fichier"

#: cdl.remotecontrol.RemoteClient.get_object_from_title:5
#: cdl.remotecontrol.RemoteClient.get_object_titles:3
#: cdl.remotecontrol.RemoteClient.get_object_uuids:3 of
msgid ""
"panel name (valid values: \"signal\", \"image\"). If None, current panel "
"is used."
msgstr ""

#: cdl.remotecontrol.RemoteClient.get_object_from_title:13
#: cdl.remotecontrol.RemoteClient.get_object_from_uuid:12
#: cdl.remotecontrol.RemoteClient.get_object_titles:10
#: cdl.remotecontrol.RemoteClient.get_object_uuids:10 of
msgid "if panel not found"
msgstr ""

#: cdl.remotecontrol.RemoteClient.get_object_from_uuid:1 of
#, fuzzy
msgid "Get object (signal/image) from uuid"
msgstr "Ouverture d'un signal ou d'une image depuis un fichier"

#: cdl.remotecontrol.RemoteClient.get_object_from_uuid:3 of
#, fuzzy
msgid "object uuid"
msgstr "Récupération de la liste des objets"

#: cdl.remotecontrol.RemoteClient.get_object_from_uuid:5 of
msgid "panel name (valid values: \"signal\", \"image\")."
msgstr ""

#: cdl.remotecontrol.RemoteClient.get_object_titles:1 of
msgid "Get object (signal/image) list for current panel"
msgstr ""

#: cdl.remotecontrol.RemoteClient.get_object_titles:7 of
#, fuzzy
msgid "list of object titles"
msgstr "Récupération de la liste des objets"

#: cdl.remotecontrol.RemoteClient.get_object_uuids:1 of
msgid "Get object (signal/image) uuid list for current panel"
msgstr ""

#: cdl.remotecontrol.RemoteClient.get_object_uuids:7 of
#, fuzzy
msgid "list of object uuids"
msgstr "Récupération de la liste des objets"

#: cdl.remotecontrol.RemoteClient.get_version:1 of
msgid "Return DataLab version."
msgstr ""

#: cdl.remotecontrol.RemoteClient.get_version:3 of
msgid "DataLab version"
msgstr ""

#: cdl.remotecontrol.RemoteClient.import_h5_file:1
#: cdl.remotecontrol.RemoteServer.import_h5_file:1 of
msgid "Open DataLab HDF5 browser to Import HDF5 file."
msgstr ""

#: cdl.remotecontrol.RemoteClient.import_h5_file:3
#: cdl.remotecontrol.RemoteClient.save_to_h5_file:3
#: cdl.remotecontrol.RemoteServer.import_h5_file:3 of
msgid "HDF5 file name"
msgstr ""

#: cdl.remotecontrol.RemoteClient.import_h5_file:5
#: cdl.remotecontrol.RemoteClient.open_h5_files:8
#: cdl.remotecontrol.RemoteServer.import_h5_file:5
#: cdl.remotecontrol.RemoteServer.open_h5_files:8 of
msgid "Reset all application data. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteClient.open_h5_files:1
#: cdl.remotecontrol.RemoteServer.open_h5_files:1 of
msgid "Open a DataLab HDF5 file or import from any other HDF5 file."
msgstr ""

#: cdl.remotecontrol.RemoteClient.open_h5_files:3 of
msgid "List of HDF5 files to open. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteClient.open_h5_files:5 of
msgid "Import all objects from HDF5 files. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteClient.open_object:1
#: cdl.remotecontrol.RemoteServer.open_object:1 of
msgid "Open object from file in current panel (signal/image)."
msgstr ""

#: cdl.remotecontrol.RemoteClient.open_object:3
#: cdl.remotecontrol.RemoteServer.open_object:3 of
msgid "File name"
msgstr ""

#: cdl.remotecontrol.RemoteClient.reset_all:1
#: cdl.remotecontrol.RemoteServer.reset_all:1 of
msgid "Reset all application data"
msgstr ""

#: cdl.remotecontrol.RemoteClient.save_to_h5_file:1
#: cdl.remotecontrol.RemoteServer.save_to_h5_file:1 of
msgid "Save to a DataLab HDF5 file."
msgstr ""

#: cdl.remotecontrol.RemoteClient.switch_to_panel:1
#: cdl.remotecontrol.RemoteServer.switch_to_panel:1 of
msgid "Switch to panel."
msgstr ""

#: cdl.remotecontrol.RemoteClient.switch_to_panel:3 of
msgid "Panel name (valid values: \"signal\", \"image\", \"macro\"))"
msgstr ""

#: cdl.remotecontrol.BaseRPCServer:1 of
msgid "Base XML-RPC server mixin"
msgstr ""

#: cdl.remotecontrol.BaseRPCServer.get_version:1 of
msgid "Return DataLab version"
msgstr ""

#: cdl.remotecontrol.BaseRPCServer.notify_port:1
#: cdl.remotecontrol.RemoteServer.notify_port:1 of
msgid "Notify automatically attributed port."
msgstr ""

#: cdl.remotecontrol.BaseRPCServer.notify_port:3 of
msgid ""
"This method is called after the server port has been automatically "
"attributed. It is intended to be reimplemented by subclasses to notify "
"the port number to the main window."
msgstr ""

#: cdl.remotecontrol.BaseRPCServer.notify_port:7
#: cdl.remotecontrol.RemoteServer.notify_port:6 of
msgid "Server port number"
msgstr ""

#: cdl.remotecontrol.BaseRPCServer.register_functions:1
#: cdl.remotecontrol.RemoteServer.register_functions:1 of
msgid "Register functions"
msgstr ""

#: cdl.remotecontrol.BaseRPCServer.serve:1 of
msgid "Start server and serve forever"
msgstr ""

#: cdl.remotecontrol.CDLConnectionError:1 of
msgid "Error when trying to connect to DataLab XML-RPC server"
msgstr ""

#: cdl.remotecontrol.RemoteServer:1 of
msgid "XML-RPC server QThread"
msgstr ""

#: cdl.remotecontrol.RemoteServer.add_image:5 of
msgid "Z data"
msgstr ""

#: cdl.remotecontrol.RemoteServer.add_image:20
#: cdl.remotecontrol.RemoteServer.add_signal:18
#: cdl.remotecontrol.RemoteServer.calc:9 of
msgid "True if successful"
msgstr ""

#: cdl.remotecontrol.RemoteServer.calc:5 of
msgid "Compute function parameters. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteServer.cdl_is_ready:1 of
msgid "Called when DataLab is ready to process new requests"
msgstr ""

#: cdl.remotecontrol.RemoteServer.get_object:14
#: cdl.remotecontrol.RemoteServer.get_object_from_title:8
#: cdl.remotecontrol.RemoteServer.get_object_from_uuid:8 of
#, fuzzy
msgid "Object data"
msgstr "Récupération de la liste des objets"

#: cdl.remotecontrol.RemoteServer.get_object_from_title:1 of
#, fuzzy
msgid "Get object (signal/image) from title."
msgstr "Ouverture d'un signal ou d'une image depuis un fichier"

#: cdl.remotecontrol.RemoteServer.get_object_from_title:3 of
msgid "Object title"
msgstr ""

#: cdl.remotecontrol.RemoteServer.get_object_from_uuid:1 of
msgid "Get object (signal/image) from uuid."
msgstr ""

#: cdl.remotecontrol.RemoteServer.get_object_from_uuid:3 of
#, fuzzy
msgid "Object uuid"
msgstr "Récupération de la liste des objets"

#: cdl.remotecontrol.RemoteServer.get_object_titles:1
#: cdl.remotecontrol.RemoteServer.get_object_uuids:1 of
msgid "Get object (signal/image) list for current panel."
msgstr ""

#: cdl.remotecontrol.RemoteServer.get_object_titles:6 of
#, fuzzy
msgid "Object titles"
msgstr "Récupération de la liste des objets"

#: cdl.remotecontrol.RemoteServer.get_object_uuids:6 of
#, fuzzy
msgid "Object uuids"
msgstr "Récupération de la liste des objets"

#: cdl.remotecontrol.RemoteServer.notify_port:3 of
msgid ""
"This method is called after the server port has been automatically "
"attributed. It notifies the port number to the main window."
msgstr ""

#: cdl.remotecontrol.RemoteServer.open_h5_files:3 of
msgid "HDF5 file names. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteServer.open_h5_files:5 of
msgid "Import all objects from HDF5 file. Defaults to None."
msgstr ""

#: cdl.remotecontrol.RemoteServer.run:1 of
msgid "Thread execution method"
msgstr ""

#: cdl.remotecontrol.RemoteServer.save_to_h5_file:3 of
msgid "HDF5 file name (with extension .h5)"
msgstr ""

#: cdl.remotecontrol.RemoteServer.switch_to_panel:3 of
msgid "Panel name (valid values: 'signal', 'image', 'macro')"
msgstr ""

#: cdl.remotecontrol.RemoteServerMeta:1 of
msgid "Mixed metaclass to avoid conflicts"
msgstr ""

#: cdl.remotecontrol.array_to_rpcbinary:1 of
msgid "Convert NumPy array to XML-RPC Binary object, with shape and dtype."
msgstr ""

#: cdl.remotecontrol.array_to_rpcbinary:3 of
msgid ""
"The array is converted to a binary string using NumPy's native binary "
"format."
msgstr ""

#: cdl.remotecontrol.array_to_rpcbinary:6 of
msgid "NumPy array to convert"
msgstr ""

#: cdl.remotecontrol.array_to_rpcbinary:8
#: cdl.remotecontrol.rpcbinary_to_array:3 of
msgid "XML-RPC Binary object"
msgstr ""

#: cdl.remotecontrol.dataset_to_json:1 of
msgid "Convert guidata DataSet to JSON data."
msgstr ""

#: cdl.remotecontrol.dataset_to_json:3 of
msgid "The JSON data is a list of three elements:"
msgstr ""

#: cdl.remotecontrol.dataset_to_json:5 of
msgid "The first element is the module name of the DataSet class"
msgstr ""

#: cdl.remotecontrol.dataset_to_json:6 of
msgid "The second element is the class name of the DataSet class"
msgstr ""

#: cdl.remotecontrol.dataset_to_json:7 of
msgid "The third element is the JSON data of the DataSet instance"
msgstr ""

#: cdl.remotecontrol.dataset_to_json:9 of
msgid "guidata DataSet to convert"
msgstr ""

#: cdl.remotecontrol.dataset_to_json:11 cdl.remotecontrol.json_to_dataset:3 of
msgid "JSON data"
msgstr ""

#: cdl.remotecontrol.get_cdl_xmlrpc_port:1 of
msgid "Return DataLab current XML-RPC port"
msgstr ""

#: cdl.remotecontrol.json_to_dataset:1 of
msgid "Convert JSON data to guidata DataSet."
msgstr ""

#: cdl.remotecontrol.json_to_dataset:5 of
msgid "guidata DataSet"
msgstr ""

#: cdl.remotecontrol.remote_call:1 of
msgid "Decorator for method calling DataLab main window remotely"
msgstr ""

#: cdl.remotecontrol.rpcbinary_to_array:1 of
msgid "Convert XML-RPC binary to NumPy array."
msgstr ""

#: cdl.remotecontrol.rpcbinary_to_array:5 of
msgid "NumPy array"
msgstr ""

#: ../../features/general/remotecontrol.rst:92
msgid "Public API: additional methods"
msgstr "API publique : méthodes supplémentaires"

#: ../../features/general/remotecontrol.rst:94
msgid ""
"The remote control class methods may be completed with additional methods"
" which are dynamically added at runtime. This mechanism allows to access "
"the methods of the \"processor\" objects of DataLab."
msgstr "Le client de contrôle à distance peut être complété avec des méthodes supplémentaires qui sont ajoutées dynamiquement à l'exécution. Ce mécanisme permet d'accéder aux méthodes des objets \"processor\" de DataLab."

#: cdl.core.gui.processor.signal:1 of
msgid "DataLab Signal Processor GUI module"
msgstr ""

#: cdl.core.gui.processor.signal.SignalProcessor:1 of
msgid "Object handling signal processing: operations, processing, computing"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_abs:1
#: cdl.core.gui.processor.signal.SignalProcessor.compute_abs:1 of
msgid "Compute absolute value"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_average:1
#: cdl.core.gui.processor.signal.SignalProcessor.compute_average:1 of
msgid "Compute average"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_calibration:1
#: cdl.core.gui.processor.signal.SignalProcessor.compute_calibration:1 of
msgid "Compute data linear calibration"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_clip:1
#: cdl.core.gui.processor.signal.SignalProcessor.compute_clip:1 of
msgid "Compute maximum data clipping"
msgstr ""

#: cdl.core.gui.processor.signal.SignalProcessor.compute_derivative:1 of
msgid "Compute derivative"
msgstr ""

#: cdl.core.gui.processor.signal.SignalProcessor.compute_difference:1 of
msgid "Compute difference between two signals"
msgstr ""

#: cdl.core.gui.processor.signal.SignalProcessor.compute_division:1 of
msgid "Compute division between two signals"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_ifft:1
#: cdl.core.gui.processor.signal.SignalProcessor.compute_fft:1 of
msgid "Compute iFFT"
msgstr ""

#: cdl.core.gui.processor.signal.SignalProcessor.compute_fit:1 of
msgid "Compute fitting curve"
msgstr ""

#: cdl.core.gui.processor.signal.SignalProcessor.compute_fw1e2:1 of
msgid "Compute FW at 1/e²"
msgstr ""

#: cdl.core.gui.processor.signal.SignalProcessor.compute_fwhm:1 of
msgid "Compute FWHM"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_gaussian_filter:1
#: cdl.core.gui.processor.signal.SignalProcessor.compute_gaussian_filter:1 of
msgid "Compute gaussian filter"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_fft:1
#: cdl.core.gui.processor.signal.SignalProcessor.compute_ifft:1 of
msgid "Compute FFT"
msgstr ""

#: cdl.core.gui.processor.signal.SignalProcessor.compute_integral:1 of
msgid "Compute integral"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_log10:1
#: cdl.core.gui.processor.signal.SignalProcessor.compute_log10:1 of
msgid "Compute Log10"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_moving_average:1
#: cdl.core.gui.processor.signal.SignalProcessor.compute_moving_average:1 of
msgid "Compute moving average"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_moving_median:1
#: cdl.core.gui.processor.signal.SignalProcessor.compute_moving_median:1 of
msgid "Compute moving median"
msgstr ""

#: cdl.core.gui.processor.signal.SignalProcessor.compute_multigaussianfit:1 of
msgid "Compute multi-Gaussian fitting curve"
msgstr ""

#: cdl.core.gui.processor.signal.SignalProcessor.compute_normalize:1 of
msgid "Normalize data"
msgstr ""

#: cdl.core.gui.processor.signal.SignalProcessor.compute_peak_detection:1 of
msgid "Detect peaks from data"
msgstr ""

#: cdl.core.gui.processor.signal.SignalProcessor.compute_polyfit:1 of
msgid "Compute polynomial fitting curve"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_product:1
#: cdl.core.gui.processor.signal.SignalProcessor.compute_product:1 of
msgid "Compute product"
msgstr ""

#: cdl.core.gui.processor.signal.SignalProcessor.compute_quadratic_difference:1
#: of
msgid "Compute quadratic difference between two signals"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_sum:1
#: cdl.core.gui.processor.signal.SignalProcessor.compute_sum:1 of
msgid "Compute sum"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_swap_axes:1
#: cdl.core.gui.processor.signal.SignalProcessor.compute_swap_axes:1 of
msgid "Swap data axes"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_threshold:1
#: cdl.core.gui.processor.signal.SignalProcessor.compute_threshold:1 of
msgid "Compute threshold clipping"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_wiener:1
#: cdl.core.gui.processor.signal.SignalProcessor.compute_wiener:1 of
msgid "Compute Wiener filter"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.extract_roi:1
#: cdl.core.gui.processor.signal.SignalProcessor.extract_roi:1 of
msgid "Extract Region Of Interest (ROI) from data"
msgstr ""

#: cdl.core.gui.processor.image:1 of
msgid "DataLab Image Processor GUI module"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor:1 of
msgid "Object handling image processing: operations, processing, computing"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_adjust_gamma:1 of
msgid "Compute gamma correction"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_adjust_log:1 of
msgid "Compute log correction"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_adjust_sigmoid:1 of
msgid "Compute sigmoid correction"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_binning:1 of
msgid "Binning image"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_black_tophat:1 of
msgid "Compute Black Top-Hat"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_blob_dog:1 of
msgid "Compute blob detection using Difference of Gaussian method"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_blob_doh:1 of
msgid "Compute blob detection using Determinant of Hessian method"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_blob_log:1 of
msgid "Compute blob detection using Laplacian of Gaussian method"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_blob_opencv:1 of
msgid "Compute blob detection using OpenCV"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_butterworth:1 of
msgid "Compute Butterworth filter"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_canny:1 of
msgid "Compute Canny filter"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_centroid:1 of
msgid "Compute image centroid"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_closing:1 of
msgid "Compute morphological closing"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_contour_shape:1 of
msgid "Compute contour shape fit"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_denoise_bilateral:1 of
msgid "Compute bilateral filter denoising"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_denoise_tophat:1 of
msgid "Denoise using White Top-Hat"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_denoise_tv:1 of
msgid "Compute Total Variation denoising"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_denoise_wavelet:1 of
msgid "Compute Wavelet denoising"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_difference:1 of
msgid "Compute difference between two images"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_dilation:1 of
msgid "Compute Dilation"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_division:1 of
msgid "Compute division between two images"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_enclosing_circle:1 of
msgid "Compute minimum enclosing circle"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_equalize_adapthist:1 of
msgid "Adaptive histogram equalization"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_equalize_hist:1 of
msgid "Histogram equalization"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_erosion:1 of
msgid "Compute Erosion"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_farid:1 of
msgid "Compute Farid filter"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_farid_h:1 of
msgid "Compute Farid filter (horizontal)"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_farid_v:1 of
msgid "Compute Farid filter (vertical)"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_flatfield:1 of
msgid "Compute flat field correction"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_fliph:1 of
msgid "Flip data horizontally"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_flipv:1 of
msgid "Flip data vertically"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_hough_circle_peaks:1 of
msgid "Compute peak detection based on a circle Hough transform"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_laplace:1 of
msgid "Compute Laplace filter"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_logp1:1 of
msgid "Compute base 10 logarithm"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_opening:1 of
msgid "Compute morphological opening"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_peak_detection:1 of
msgid "Compute 2D peak detection"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_prewitt:1 of
msgid "Compute Prewitt filter"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_prewitt_h:1 of
msgid "Compute Prewitt filter (horizontal)"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_prewitt_v:1 of
msgid "Compute Prewitt filter (vertical)"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_quadratic_difference:1
#: of
msgid "Compute quadratic difference between two images"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_rescale_intensity:1 of
msgid "Rescale image intensity levels"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_resize:1 of
msgid "Resize image"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_roberts:1 of
msgid "Compute Roberts filter"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_rotate:1 of
msgid "Rotate data arbitrarily"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_rotate270:1 of
msgid "Rotate data 270°"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_rotate90:1 of
msgid "Rotate data 90°"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_scharr:1 of
msgid "Compute Scharr filter"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_scharr_h:1 of
msgid "Compute Scharr filter (horizontal)"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_scharr_v:1 of
msgid "Compute Scharr filter (vertical)"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_sobel:1 of
msgid "Compute Sobel filter"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_sobel_h:1 of
msgid "Compute Sobel filter (horizontal)"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_sobel_v:1 of
msgid "Compute Sobel filter (vertical)"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.compute_white_tophat:1 of
msgid "Compute White Top-Hat"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.distribute_on_grid:1 of
msgid "Distribute images on a grid"
msgstr ""

#: cdl.core.gui.processor.image.ImageProcessor.reset_positions:1 of
msgid "Reset image positions"
msgstr ""

#~ msgid "Bases: :py:class:`~abc.ABC`"
#~ msgstr ""

#~ msgid "Call compute function `name` in current panel's processor."
#~ msgstr ""

#~ msgid ""
#~ "If `index` is not specified, returns "
#~ "the currently selected object. If "
#~ "`group_index` is not specified, return "
#~ "an object from the current group. "
#~ "If `panel` is not specified, return "
#~ "an object from the current panel."
#~ msgstr ""

#~ msgid ""
#~ "Bases: :py:class:`~PyQt5.QtCore.QThread`, "
#~ ":py:class:`~cdl.remotecontrol.BaseRPCServer`"
#~ msgstr ""

#~ msgid "int = ..., arguments: Sequence = ...) -> PYQT_SIGNAL"
#~ msgstr ""

#~ msgid ""
#~ "types is normally a sequence of "
#~ "individual types.  Each type is either"
#~ " a type object or a string that"
#~ " is the name of a C++ type."
#~ "  Alternatively each type could itself "
#~ "be a sequence of types each "
#~ "describing a different overloaded signal. "
#~ "name is the optional C++ name of"
#~ " the signal.  If it is not "
#~ "specified then the name of the "
#~ "class attribute that is bound to "
#~ "the signal is used. revision is "
#~ "the optional revision of the signal "
#~ "that is exported to QML. If it "
#~ "is not specified then 0 is used."
#~ " arguments is the optional sequence "
#~ "of the names of the signal's "
#~ "arguments."
#~ msgstr ""

#~ msgid "type"
#~ msgstr ""

#~ msgid "pyqtSignal(*types, name"
#~ msgstr ""

#~ msgid "str = ..., revision"
#~ msgstr ""

#~ msgid "Bases: :py:class:`~sip.wrappertype`, :py:class:`~abc.ABCMeta`"
#~ msgstr ""

#~ msgid "Public API"
#~ msgstr "API publique"

#~ msgid "The public API is the following:"
#~ msgstr "L'API publique est la suivante :"

#~ msgid "Bases: :py:class:`abc.ABC`"
#~ msgstr ""

#~ msgid "Bases: :py:class:`Exception`"
#~ msgstr ""

#~ msgid "Bases: :py:class:`object`"
#~ msgstr ""

#~ msgid ""
#~ "Bases: :py:class:`PyQt5.QtCore.QThread`, "
#~ ":py:class:`cdl.remotecontrol.BaseRPCServer`"
#~ msgstr ""

#~ msgid "Bases: :py:class:`sip.wrappertype`, :py:class:`abc.ABCMeta`"
#~ msgstr ""
